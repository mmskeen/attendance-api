

-- app notes --

Mon Aug 5, 2019

database structure:

users (attendees, and hosts)
attendees have a list of meetings they have attended in the past
attendees and hosts have a profile, which includes email, phone, etc.

hosts have a list of meetings they have hosted in the past (and future)

each meeting has a title, date, time, location, notes
each meeting also has a list of attendees, with a timestamp they registered
 (it can also have a GPS location, eventually)


OK...how do we organize this? By meetings, or by users? Maybe by meetings?
Each meeting has a host and has a list of attendees [eventually maybe a meeting can have multiple hosts]

Then, we simply do a search when we want to get a list of meetings for each attendee or host;

how does this work with the API? Well, maybe we can have a userId, for each attendee;
OK, maybe I'll do 'normalization' and reference them;

Maybe start off with it being organized by meeting?

So, I *could* do something with aggregation, to create calculated fields


User Interface:
Attendee will log in

[for today: Erin Ann? doorbell, etc?]

TESTING: Use postman to test!

Overall plan of attack: finish the API, test the API; (meetings will be the hardest part)
Then, come up with a simple, mobile-first, interface;
at some point put in the outh and regular auth (separate database?)
(not sure how much or when to worry about the CSS, etc., to get it looking nice)
(eventually, smooth out the interface
eventually, host it (both database and the whole app)
put it on github; add ReadMe file, and put in notes for testing, perhaps)
 -- get some ideas on how to improve it --

 User interface notes (Tue 8/6/2019):

 User logs in. Asks for meeting code, or asks to create meeting; returns meeting code


 Tue 8/13/2019: Now what? Clean up the interface some. Allow ability to delete meetings.
 Also allow the ability to view a table of the attendees of a meeting.

 Sat 9/7/2019:

 Start mongo database

 mongod --config /usr/local/etc/mongod.conf

 cd /Users/adminadmin/OneDrive/Documents_One/Bootcamps/Helio/attendance-api
 nodemon app.js

 cd /Users/adminadmin/OneDrive/Documents_One/Bootcamps/Helio/attendance
 nodemon app.js

localhost:3000 (in incognito browser)
